package ch.maak.wz.communitylevels.communitylevels.shared.records;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

import javax.annotation.Generated;
import java.util.Date;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "ch.maak.wz.communitylevels.communitylevels.client.records.StatisticsForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class StatisticsFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    public LongestTimespan getLongestTimespan() {
        return getFieldByClass(LongestTimespan.class);
    }

    public MostRecordsOnDate getMostRecordsOnDate() {
        return getFieldByClass(MostRecordsOnDate.class);
    }

    public static class LongestTimespan extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public LongestTimespanRowData addRow() {
            return (LongestTimespanRowData) super.addRow();
        }

        @Override
        public LongestTimespanRowData addRow(int rowState) {
            return (LongestTimespanRowData) super.addRow(rowState);
        }

        @Override
        public LongestTimespanRowData createRow() {
            return new LongestTimespanRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return LongestTimespanRowData.class;
        }

        @Override
        public LongestTimespanRowData[] getRows() {
            return (LongestTimespanRowData[]) super.getRows();
        }

        @Override
        public LongestTimespanRowData rowAt(int index) {
            return (LongestTimespanRowData) super.rowAt(index);
        }

        public void setRows(LongestTimespanRowData[] rows) {
            super.setRows(rows);
        }

        public static class LongestTimespanRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
            public static final String rank = "rank";
            public static final String player = "player";
            public static final String days = "days";
            public static final String level = "level";
            public static final String levelId = "levelId";
            private Integer m_rank;
            private String m_player;
            private Integer m_days;
            private String m_level;
            private String m_levelId;

            public Integer getRank() {
                return m_rank;
            }

            public void setRank(Integer newRank) {
                m_rank = newRank;
            }

            public String getPlayer() {
                return m_player;
            }

            public void setPlayer(String newPlayer) {
                m_player = newPlayer;
            }

            public Integer getDays() {
                return m_days;
            }

            public void setDays(Integer newDays) {
                m_days = newDays;
            }

            public String getLevel() {
                return m_level;
            }

            public void setLevel(String newLevel) {
                m_level = newLevel;
            }

            public String getLevelId() {
                return m_levelId;
            }

            public void setLevelId(String newLevelId) {
                m_levelId = newLevelId;
            }
        }
    }

    public static class MostRecordsOnDate extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public MostRecordsOnDateRowData addRow() {
            return (MostRecordsOnDateRowData) super.addRow();
        }

        @Override
        public MostRecordsOnDateRowData addRow(int rowState) {
            return (MostRecordsOnDateRowData) super.addRow(rowState);
        }

        @Override
        public MostRecordsOnDateRowData createRow() {
            return new MostRecordsOnDateRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return MostRecordsOnDateRowData.class;
        }

        @Override
        public MostRecordsOnDateRowData[] getRows() {
            return (MostRecordsOnDateRowData[]) super.getRows();
        }

        @Override
        public MostRecordsOnDateRowData rowAt(int index) {
            return (MostRecordsOnDateRowData) super.rowAt(index);
        }

        public void setRows(MostRecordsOnDateRowData[] rows) {
            super.setRows(rows);
        }

        public static class MostRecordsOnDateRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
            public static final String rank = "rank";
            public static final String player = "player";
            public static final String records = "records";
            public static final String evtRecord = "evtRecord";
            private Integer m_rank;
            private String m_player;
            private String m_records;
            private Date m_evtRecord;

            public Integer getRank() {
                return m_rank;
            }

            public void setRank(Integer newRank) {
                m_rank = newRank;
            }

            public String getPlayer() {
                return m_player;
            }

            public void setPlayer(String newPlayer) {
                m_player = newPlayer;
            }

            public String getRecords() {
                return m_records;
            }

            public void setRecords(String newRecords) {
                m_records = newRecords;
            }

            public Date getEvtRecord() {
                return m_evtRecord;
            }

            public void setEvtRecord(Date newEvtRecord) {
                m_evtRecord = newEvtRecord;
            }
        }
    }
}
