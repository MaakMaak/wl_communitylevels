package ch.maak.wl.communitylevels.communitylevels.shared.level;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "ch.maak.wl.communitylevels.communitylevels.client.level.RecordHolderLevelTablePage", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class RecordHolderLevelTablePageData extends AbstractLevelTablePageData {

	private static final long serialVersionUID = 1L;

	@Override
	public RecordHolderLevelTableRowData addRow() {
		return (RecordHolderLevelTableRowData) super.addRow();
	}

	@Override
	public RecordHolderLevelTableRowData addRow(int rowState) {
		return (RecordHolderLevelTableRowData) super.addRow(rowState);
	}

	@Override
	public RecordHolderLevelTableRowData createRow() {
		return new RecordHolderLevelTableRowData();
	}

	@Override
	public Class<? extends AbstractTableRowData> getRowType() {
		return RecordHolderLevelTableRowData.class;
	}

	@Override
	public RecordHolderLevelTableRowData[] getRows() {
		return (RecordHolderLevelTableRowData[]) super.getRows();
	}

	@Override
	public RecordHolderLevelTableRowData rowAt(int index) {
		return (RecordHolderLevelTableRowData) super.rowAt(index);
	}

	public void setRows(RecordHolderLevelTableRowData[] rows) {
		super.setRows(rows);
	}

	public static class RecordHolderLevelTableRowData extends AbstractLevelTableRowData {

		private static final long serialVersionUID = 1L;
	}
}
